[tox]
envlist = py{37,38,39,310}-{linux,macos,windows}
skip_missing_interpreters = true
skipsdist = true

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[base]
deps =
    pip>=21.1
    versioningit>=1.1.1

[build]
deps =
    pip>=21.1
    build
    twine

[testenv]
setenv =
    PYTHONPATH = {toxinidir}/src

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

allowlist_externals = bash

deps =
    {[base]deps}
    .[test,cov]

commands =
    python -m pytest -v . --capture=no --doctest-modules --cov gitchangelog --cov-branch --cov-report term-missing
    coverage xml
    bash .github/fix_pkg_name.sh

[testenv:dev]
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    -e .

commands =
    gitchangelog --debug {posargs:HEAD~5..HEAD}

[testenv:lint]
passenv =
    CI
    PYTHONIOENCODING

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    -r requirements.txt
    pylint

commands = pylint -d C0114,C0115,C0116,C0209,C0103 --fail-under=6 src/gitchangelog/gitchangelog.py

[testenv:install]
skip_install = true
passenv =
    CI
    PYTHONIOENCODING

allowlist_externals = bash

deps =
    {[base]deps}

commands =
    pip install .
    bash -c 'export GITCHANGELOG_CONFIG_FILENAME=$(get-rcpath); \
        gitchangelog $(git tag --sort=taggerdate | tail -n2 | head -n1)..'

[testenv:build]
skip_install = true

passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv = CI

allowlist_externals = bash

deps =
    pip>=21.1

commands =
    pip install gitchangelog --force-reinstall --pre --prefer-binary -f dist/
    gitchangelog --version
    bash -c 'export GITCHANGELOG_CONFIG_FILENAME=$(get-rcpath); \
      gitchangelog --debug HEAD~3..HEAD'

[testenv:docs]
skip_install = true
allowlist_externals =
    make

deps =
    {[base]deps}
    .[doc]

commands_pre =
    # need to generate version info in a fresh checkout or after clean
    python setup.py egg_info

commands = make -C docs html

[testenv:docs-lint]
skip_install = true
allowlist_externals =
    make

deps =
    {[base]deps}
    .[doc]

commands_pre =
    # need to generate version info in a fresh checkout
    python setup.py egg_info

commands = make -C docs linkcheck

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    flake8
    flake8-bugbear

commands =
    flake8 src/

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    mypy
    Mako
    pystache @ https://github.com/VCTLabs/pystache/releases/download/v0.6.2/pystache-0.6.2.tar.gz

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive src/

[testenv:black]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    black

commands =
    black -v -S src/ {posargs}

[testenv:isort]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    isort

commands =
    python -m isort src/gitchangelog

[testenv:clean]
skip_install = true
allowlist_externals = bash

deps =
    pip>=21.1

commands =
    bash -c 'make -C docs/ clean'
    bash -c 'rm -rf build/ dist/ .coverage* src/*.egg-info/ src/*/_version.py docs/source/api/'
